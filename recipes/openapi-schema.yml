openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/recipes/:
    get:
      operationId: listRecipes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
    post:
      operationId: createRecipe
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
  /api/recipes/{id}/:
    get:
      operationId: retrieveRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this recipe.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
    put:
      operationId: updateRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this recipe.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this recipe.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRecipe
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this recipe.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/ingredients/:
    get:
      operationId: listIngredients
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - api
    post:
      operationId: createIngredient
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - api
  /api/ingredients/{id}/:
    get:
      operationId: retrieveIngredient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ingredient.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - api
    put:
      operationId: updateIngredient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ingredient.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateIngredient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ingredient.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyIngredient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ingredient.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/categories/:
    get:
      operationId: listCategorys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    post:
      operationId: createCategory
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/categories/{id}/:
    get:
      operationId: retrieveCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    put:
      operationId: updateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
      required:
      - username
    Recipe:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: string
        title:
          type: string
          maxLength: 255
        ingredients:
          type: array
          items:
            type: string
          readOnly: true
        content:
          type: string
        category:
          type: string
        time_create:
          type: string
          format: date-time
          readOnly: true
      required:
      - author
      - title
      - content
      - category
    Ingredient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
      required:
      - name
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          enum:
          - first
          - secnd
          - salad
          - sweet
          - drink
          type: string
